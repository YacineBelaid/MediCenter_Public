# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Nodejs.gitlab-ci.yml

# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: https://docs.gitlab.com/ee/ci/services/index.html
services:
  - mysql:latest
  - redis:latest
  - postgres:latest

# This folder is cached between builds
# https://docs.gitlab.com/ee/ci/yaml/index.html#cache
cache:
  paths:
    - node_modules/

API_Read_build:
  script:
    - cd serveur/api-read
    - npm install
API_Write_build:
  script:
    - cd ../api-write
    - npm install
API_Authentification_build:
  script:
    - cd ../api-authentification
    - npm install

APP_Patient_build:
  script:
    - cd client/app-patient
    - npm install

Portail_Pro_build:
  script:
    - cd ../portail-professionnel
    - npm install

test_API_read:
  script:
    - cd serveur/api-read
    - npm install
    - npm run test

test_API_write:
  script:
    - cd ../api-write
    - npm install
    - npm run test

test_API_authentification:
  script:
    - cd ../api-authentification
    - npm install
    - npm run test

test_app_patient:
  script:
    - cd client/app-patient
    - npm install
    - npm run test
    
test_portail_professionnel:
  script:
    - cd ../portail-professionnel
    - npm install
    - npm run test

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production
